function [rMPI,CA,Ind,sortCA,CA_act,Ind_act,sortCA_act]  =mfield_montecarlo(nrep,method,abs_flag,randset)
if nargin<1
    nrep    = 10000;
    method  = 'within';
    abs_flag    = 1;
    randset = sum(100*clock);
elseif nargin<2
    method  = 'within';
    abs_flag    = 1;
    randset = sum(100*clock);
elseif nargin<3
    abs_flag    = 1;
elseif nargin<4
    randset = sum(100*clock);
end


W{1}  = [
0.73961562 	0.57447836 	0.07796567 	0.59294381 	0.62915656 	0.89651696 	0.50855629 	0.51113569 	0.69247782 	0.35641102 	0.10643922 	0.33362173 
0.73961562 	0.57447836 	0.07796567 	0.59294381 	0.62915656 	0.89651696 	0.50855629 	0.51113569 	0.69247782 	0.35641102 	0.10643922 	0.33362173 
0.73961562 	0.57447836 	0.07796567 	0.59294381 	0.62915656 	0.89651696 	0.50855629 	0.51113569 	0.69247782 	0.35641102 	0.10643922 	0.33362173 
0.73961562 	0.57447836 	0.07796567 	0.59294381 	0.62915656 	0.89651696 	0.50855629 	0.51113569 	0.69247782 	0.35641102 	0.10643922 	0.33362173 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
0.78783112 	0.73010366 	0.30011987 	0.22426574 	0.65681220 	0.71724392 	0.90332316 	0.03266325 	0.30741301 	0.15464711 	0.28981107 	0.13116176 
    ];

W{2}  = [
0.22752228 	0.23805868 	0.09682410 	0.31477878 	0.25135205 	0.14268993 	0.35864565 	0.27325292 	0.21756604 	0.42993363 	0.91102055 	0.64810294 
0.22752228 	0.23805868 	0.09682410 	0.31477878 	0.25135205 	0.14268993 	0.35864565 	0.27325292 	0.21756604 	0.42993363 	0.91102055 	0.64810294 
0.22752228 	0.23805868 	0.09682410 	0.31477878 	0.25135205 	0.14268993 	0.35864565 	0.27325292 	0.21756604 	0.42993363 	0.91102055 	0.64810294 
0.22752228 	0.23805868 	0.09682410 	0.31477878 	0.25135205 	0.14268993 	0.35864565 	0.27325292 	0.21756604 	0.42993363 	0.91102055 	0.64810294 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
0.12277493 	0.18056775 	0.35629098 	0.34099362 	0.09699384 	0.22108454 	0.26427349 	0.06400983 	0.31334496 	0.50764270 	0.40319816 	0.99691718 
    ];

W{3}  = [
0.05996478 	0.14714005 	0.83414040 	0.08126832 	0.10962310 	0.02341788 	0.08970862 	0.19741974 	0.10341728 	0.09184035 	0.06941264 	0.04570626 
0.05996478 	0.14714005 	0.83414040 	0.08126832 	0.10962310 	0.02341788 	0.08970862 	0.19741974 	0.10341728 	0.09184035 	0.06941264 	0.04570626 
0.05996478 	0.14714005 	0.83414040 	0.08126832 	0.10962310 	0.02341788 	0.08970862 	0.19741974 	0.10341728 	0.09184035 	0.06941264 	0.04570626 
0.05996478 	0.14714005 	0.83414040 	0.08126832 	0.10962310 	0.02341788 	0.08970862 	0.19741974 	0.10341728 	0.09184035 	0.06941264 	0.04570626 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
0.07216573 	0.07323222 	0.17430541 	0.22870780 	0.19855242 	0.08984672 	0.02837028 	1.04259240 	0.35633881 	0.16669472 	0.16509083 	0.06277782 
    ];


% W{1}  = [
%     1.0526 	0.8283 	0.0216 	0.6123 	0.5834 	0.9132 	0.6574 	0.4930 	0.7846 	0.3257 	0.0063 	0.5587
%     0.9924 	0.6928 	0.0694 	0.2667 	0.2570 	0.3767 	0.2819 	0.2207 	0.2905 	0.0911 	0.0001 	0.1802
%     0.6802 	0.3138 	0.0724 	0.5506 	0.8305 	1.0733 	0.7049 	0.6894 	0.8489 	0.3686 	0.0216 	0.3112
%     0.0265 	0.4973 	0.1995 	0.5863 	0.3554 	0.7947 	0.5226 	0.0834 	0.3789 	0.2577 	0.0438 	0.1465
%     0.9024 	0.8995 	0.3393 	0.1686 	0.6857 	0.8957 	1.0007 	0.0030 	0.2349 	0.1767 	0.3869 	0.0168
%     1.0329 	0.9699 	0.3732 	0.2807 	0.8912 	0.9803 	1.1227 	0.1112 	0.4062 	0.2055 	0.3484 	0.0142
%     0.9764 	0.9296 	0.3317 	0.2320 	0.7791 	0.8764 	0.9765 	0.0078 	0.3100 	0.1855 	0.3915 	0.0369
%     1.0144 	0.9706 	0.3781 	0.2848 	0.8343 	1.0088 	1.0782 	0.0001 	0.3559 	0.2916 	0.3872 	0.1486
%     1.0097 	0.9672 	0.3626 	0.2697 	0.8304 	1.0062 	1.1012 	0.0035 	0.3267 	0.2270 	0.3252 	0.0224
%     0.6976 	0.5626 	0.1871 	0.0254 	0.2511 	0.5517 	0.8760 	0.0038 	0.1770 	0.0641 	0.2256 	0.1992
%     0.8592 	0.7606 	0.1447 	0.0173 	0.4812 	0.7173 	0.7953 	0.0045 	0.2625 	0.0153 	0.2470 	0.0719
%     0.7591 	0.7327 	0.2861 	0.1676 	0.5633 	0.7969 	1.0459 	0.0007 	0.1675 	0.1417 	0.3671 	0.0226
%     0.7955 	0.7509 	0.2809 	0.1367 	0.5840 	0.8956 	1.0741 	0.0001 	0.3086 	0.0718 	0.0826 	0.0418
%     0.8249 	0.6995 	0.2649 	0.0794 	0.4988 	0.8474 	1.0546 	0.0021 	0.3285 	0.1867 	0.0595 	0.0121
%     0.8442 	0.7434 	0.3216 	0.1480 	0.5320 	0.9265 	1.1158 	0.0120 	0.3339 	0.1931 	0.0892 	0.0165
%     0.8308 	0.7082 	0.2193 	0.1733 	0.8456 	0.7719 	1.0317 	0.0004 	0.2305 	0.0981 	0.2023 	0.0763
%     0.7764 	0.7015 	0.3009 	0.2366 	0.9101 	0.7179 	0.5653 	0.0383 	0.3301 	0.1137 	0.2297 	0.0081
%     0.8813 	0.7235 	0.4094 	0.3130 	0.7263 	0.8109 	1.1784 	0.0038 	0.2267 	0.1111 	0.3415 	0.0107
%     0.8085 	0.7184 	0.2747 	0.3943 	0.8633 	0.7507 	1.1447 	0.0069 	0.3427 	0.0703 	0.2846 	0.0010
%     0.9989 	0.8034 	0.1739 	0.2683 	0.7395 	0.6536 	1.1672 	0.0000 	0.4648 	0.0999 	0.2055 	0.0325
%     0.9524 	0.8425 	0.1584 	0.2480 	0.7124 	0.6138 	1.1480 	0.0003 	0.4519 	0.0780 	0.1892 	0.0037
%     0.9602 	0.7966 	0.2437 	0.3342 	0.8258 	0.7184 	1.0510 	0.0000 	0.5199 	0.1489 	0.2715 	0.2038
%     0.9854 	0.9744 	0.2673 	0.3269 	0.8124 	0.8025 	1.1491 	0.0015 	0.5583 	0.1540 	0.0008 	0.6393
%     ];
% 
% W{2}  = [
%     0.0593 	0.1813 	0.9662 	0.1177 	0.1012 	0.0204 	0.1043 	0.1401 	0.0585 	0.0602 	0.0088 	0.0121
%     0.0239 	0.1308 	0.8771 	0.0715 	0.0445 	0.0048 	0.0599 	0.0719 	0.0451 	0.0476 	0.0569 	0.0198
%     0.1248 	0.0937 	0.9344 	0.0761 	0.0604 	0.0043 	0.1007 	0.1723 	0.0760 	0.0889 	0.0879 	0.0815
%     0.0794 	0.1884 	0.4128 	0.0301 	0.2640 	0.0841 	0.1482 	0.5859 	0.2867 	0.2432 	0.1554 	0.1309
%     0.0472 	0.0484 	0.1387 	0.1850 	0.1546 	0.0483 	0.0073 	1.0281 	0.3440 	0.0805 	0.1036 	0.0107
%     0.0138 	0.0170 	0.1900 	0.2284 	0.1352 	0.0559 	0.0050 	1.0790 	0.3927 	0.1500 	0.1614 	0.0331
%     0.0296 	0.0223 	0.1627 	0.1643 	0.0952 	0.0746 	0.0556 	1.0079 	0.3555 	0.0822 	0.0711 	0.0063
%     0.0276 	0.0294 	0.1699 	0.2160 	0.1352 	0.0621 	0.0403 	1.1325 	0.4344 	0.0994 	0.1058 	0.0267
%     0.0228 	0.0170 	0.1729 	0.2184 	0.1326 	0.0539 	0.0189 	1.1446 	0.4400 	0.1150 	0.1218 	0.0499
%     0.0243 	0.0368 	0.1282 	0.1144 	0.0929 	0.0698 	0.0663 	0.9494 	0.3000 	0.0739 	0.0785 	0.0805
%     0.0429 	0.0466 	0.1768 	0.1553 	0.1943 	0.0564 	0.0799 	1.0362 	0.3252 	0.1050 	0.1136 	0.0236
%     0.0930 	0.1042 	0.1389 	0.2446 	0.2442 	0.0425 	0.0030 	0.9834 	0.4767 	0.0581 	0.1201 	0.0829
%     0.1738 	0.2001 	0.2894 	0.3860 	0.3618 	0.0703 	0.0002 	1.1449 	0.4900 	0.3300 	0.2662 	0.0002
%     0.1535 	0.1989 	0.3275 	0.4048 	0.4643 	0.0663 	0.0000 	1.2811 	0.4872 	0.3269 	0.3565 	0.0053
%     0.1402 	0.1676 	0.2866 	0.3060 	0.3658 	0.0886 	0.0001 	1.2524 	0.4380 	0.3324 	0.2342 	0.0224
%     0.0762 	0.0728 	0.1620 	0.1875 	0.1482 	0.1088 	0.0000 	1.1688 	0.4044 	0.1538 	0.1646 	0.0018
%     0.0411 	0.0866 	0.1889 	0.2673 	0.0952 	0.0670 	0.0008 	1.1553 	0.3826 	0.2615 	0.2334 	0.1880
%     0.0483 	0.0621 	0.0950 	0.1519 	0.1809 	0.0813 	0.0020 	1.0831 	0.3682 	0.0897 	0.1107 	0.0020
%     0.0535 	0.0385 	0.1024 	0.1362 	0.0930 	0.0645 	0.0067 	1.0097 	0.3970 	0.0997 	0.1203 	0.0030
%     0.0250 	0.0385 	0.1174 	0.1121 	0.1330 	0.1181 	0.0002 	1.1194 	0.2146 	0.1337 	0.1774 	0.0069
%     0.0322 	0.0300 	0.1122 	0.1072 	0.1232 	0.1137 	0.0007 	1.1060 	0.2096 	0.1286 	0.1798 	0.0004
%     0.0365 	0.0621 	0.1471 	0.1507 	0.1303 	0.1194 	0.0001 	1.1150 	0.2219 	0.1499 	0.1454 	0.0020
%     0.0510 	0.0659 	0.1923 	0.2060 	0.1825 	0.1873 	0.0004 	1.1739 	0.2905 	0.1826 	0.1827 	0.0000
%     ];
% 
% W{3}  = [
%     0.0011 	0.0142 	0.0360 	0.2671 	0.2771 	0.1214 	0.2332 	0.3139 	0.1881 	0.3146 	1.0942 	0.4230
%     0.0062 	0.1533 	0.0713 	0.7428 	0.6763 	0.7723 	0.6412 	0.6082 	0.6918 	0.6548 	0.9356 	0.8647
%     0.1908 	0.4776 	0.0065 	0.3180 	0.1250 	0.0034 	0.1936 	0.1428 	0.0974 	0.4414 	1.0081 	0.5973
%     0.8840 	0.3131 	0.3822 	0.3862 	0.3785 	0.1205 	0.3287 	0.3316 	0.3346 	0.5071 	0.8069 	0.7271
%     0.0617 	0.0452 	0.4255 	0.3916 	0.1320 	0.1118 	0.1382 	0.0665 	0.4115 	0.4804 	0.3568 	1.2170
%     0.0019 	0.0061 	0.1024 	0.0879 	0.0158 	0.0291 	0.0243 	0.0012 	0.1410 	0.4991 	0.3771 	1.1210
%     0.0320 	0.0399 	0.3363 	0.3129 	0.1417 	0.0902 	0.1048 	0.0762 	0.3273 	0.4750 	0.4253 	1.2027
%     0.0005 	0.0076 	0.1263 	0.1040 	0.0297 	0.0015 	0.0426 	0.0106 	0.1780 	0.4805 	0.4212 	1.0012
%     0.0054 	0.0215 	0.1317 	0.1105 	0.0362 	0.0094 	0.0509 	0.0047 	0.1959 	0.5231 	0.4635 	1.1066
%     0.3089 	0.4904 	0.5790 	0.7309 	0.8631 	0.3918 	0.0083 	0.0605 	0.5337 	0.7429 	0.6524 	0.7599
%     0.0625 	0.2077 	0.5949 	0.6817 	0.2716 	0.2605 	0.1709 	0.0220 	0.3961 	0.7576 	0.5797 	1.1494
%     0.1070 	0.1218 	0.4501 	0.4573 	0.1205 	0.1980 	0.0993 	0.0635 	0.4080 	0.6667 	0.4830 	1.0741
%     0.0079 	0.0197 	0.2599 	0.2931 	0.0045 	0.0543 	0.1036 	0.0714 	0.2099 	0.5190 	0.3583 	1.1443
%     0.0169 	0.0951 	0.2621 	0.2390 	0.0009 	0.1253 	0.1063 	0.0012 	0.1579 	0.3189 	0.2704 	1.1798
%     0.0263 	0.0408 	0.2269 	0.2043 	0.0101 	0.0413 	0.0820 	0.0029 	0.2051 	0.3704 	0.2301 	1.1685
%     0.0332 	0.1620 	0.3113 	0.3167 	0.0001 	0.0512 	0.3100 	0.0001 	0.3380 	0.5298 	0.5055 	1.1852
%     0.1843 	0.1996 	0.2686 	0.1928 	0.0239 	0.2690 	0.7450 	0.0000 	0.2466 	0.4287 	0.3423 	0.8667
%     0.0535 	0.1773 	0.3601 	0.3895 	0.0225 	0.1267 	0.0390 	0.0071 	0.3413 	0.6269 	0.4498 	1.2191
%     0.0911 	0.1866 	0.4852 	0.3790 	0.0116 	0.1436 	0.0704 	0.0302 	0.3213 	0.6385 	0.4613 	1.2235
%     0.0064 	0.1430 	0.4505 	0.4019 	0.1156 	0.2309 	0.0064 	0.0015 	0.2521 	0.5218 	0.4728 	1.2870
%     0.0359 	0.1351 	0.4706 	0.4246 	0.1597 	0.2729 	0.0023 	0.0090 	0.2705 	0.5496 	0.5005 	1.3289
%     0.0166 	0.1007 	0.3424 	0.2856 	0.0046 	0.1560 	0.2039 	0.0206 	0.2038 	0.4609 	0.4424 	1.0727
%     0.0054 	0.0050 	0.1330 	0.0899 	0.0001 	0.0067 	0.0077 	0.0068 	0.0202 	0.4889 	0.9140 	0.5427
%     ];

MPI = [
0.00000000 	0.00000000 	0.00000000 	2.51012802 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	3.80405573 	0.00000000 
0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	7.34723946 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	13.14018124 	0.00000000 	7.68274588 	6.92583718 	0.00000000 	0.00000000 	0.00000000 
0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	20.01334062 
0.00000000 	10.59070316 	8.36975078 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
0.00000000 	0.00000000 	0.00000000 	0.00000000 	18.15512166 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
10.21215535 	7.88601335 	3.61417025 	4.25131126 	4.43362547 	2.59922408 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
13.76850788 	12.66760850 	6.88249305 	5.96854329 	5.61413171 	2.66072588 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	9.50806385 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	4.09378857 	0.00000000 	0.00000000 
0.00000000 	1.44523028 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
7.72338637 	8.13273344 	9.65164681 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	6.73799624 	0.00000000 	5.95210487 	4.45823453 	0.00000000 
0.00000000 	13.96656556 	0.00000000 	5.39418057 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	4.50220564 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	2.62292000 	0.00000000 	0.00000000 	2.33875315 	0.00000000 	0.00000000 	0.00000000 
0.00000000 	0.00000000 	4.84730315 	0.00000000 	0.00000000 	20.25192551 	15.78612261 	0.00000000 	0.00000000 	0.00000000 	0.00000000 	0.00000000 
    ];
% randreset(0);
% randreset(2);
% randreset(3);

[nrow,ncol] = size(MPI);
% [a,avec]    = meanangle(W,MPI);

nW          = length(W);

m       = nan(1,nrep);
mvec    = nan(nrow,nrep);

rMPI    = cell(nrep,1);
CA       = cell(nrep,1);
Ind     = cell(nrep,1);
sCA      = cell(nrep,1);


CA_act      = nan(nrow,nW);
sortCA_act  = nan(nrow,nW);
Ind_act     = nan(nrow,nW);
for irow=1:nrow
    for iW=1:nW
    x   = W{iW}(irow,:);
    y   = MPI(irow,:);
    CA_act(irow,iW) = dot(x,y)/(norm(x)*norm(y));
%     CA_act(irow,iW) = dot(x,y);
    end
    [sortCA_act(irow,:),Ind_act(irow,:)]    = sort(abs(CA_act(irow,:)),'descend');
end

if(abs_flag)
                    disp('abs: on')
                else
                    disp('abs: off')
                end



switch method
    case 'within'
        randreset(randset);
        for irep=1:nrep
            rMPI{irep}  = nan(nrow,ncol);
            CA{irep}     = nan(nrow,nW);
            sortCA{irep}    = nan(nrow,nW);
            Ind{irep}   = nan(nrow,nW);
            for irow=1:nrow
                rMPI{irep}(irow,:)  = MPI(irow,randperm(ncol));
                for iW=1:nW
                    x   = W{iW}(irow,:);
                    y   = rMPI{irep}(irow,:);
                    CA{irep}(irow,iW)= dot(x,y)/(norm(x)*norm(y));
                end
                if(abs_flag)
                    [sortCA{irep}(irow,:),Ind{irep}(irow,:)]    = sort(abs(CA{irep}(irow,:)),'descend');
                else
                    [sortCA{irep}(irow,:),Ind{irep}(irow,:)]    = sort(CA{irep}(irow,:),'descend');
                end
            end
            
            %     [m(irep),mvec(:,irep)] = meanangle(W,MPI2);
            indicator(irep,nrep);
        end
        indicator(0,0)
    case 'between'
%         randreset(0);
        randreset(randset);
        for irep=1:nrep
            %             rMPI{irep}  = nan(nrow,ncol);
            CA{irep}     = nan(nrow,nW);
            sortCA{irep}    = nan(nrow,nW);
            Ind{irep}   = nan(nrow,nW);
            
%             rMPI{irep}  = reshape(MPI,numel(MPI),1);
%             rMPI{irep}  = MPI(randperm(numel(MPI)));
%             rMPI{irep}  = reshape(rMPI{irep},nrow,ncol);
            
% % %             rMPI{irep}  = reshape(MPI(randperm(numel(MPI))),nrow,ncol);
            
            temp=0;
            while(any(sum(temp,2)==0))
                temp = reshape(MPI(randperm(numel(MPI))),nrow,ncol);
            end
            rMPI{irep}  = temp;
            
            for irow=1:nrow
                %                 rMPI{irep}(irow,:)  = MPI(irow,randperm(ncol));
                for iW=1:nW
                    x   = W{iW}(irow,:);
                    y   = rMPI{irep}(irow,:);
                    CA{irep}(irow,iW)= dot(x,y)/(norm(x)*norm(y));
%                     CA{irep}(irow,iW)= dot(x,y);
                end
                if(abs_flag)
                    [sortCA{irep}(irow,:),Ind{irep}(irow,:)]    = sort(abs(CA{irep}(irow,:)),'descend');
                else
                    [sortCA{irep}(irow,:),Ind{irep}(irow,:)]    = sort(CA{irep}(irow,:),'descend');
                end
            end
            
            %     [m(irep),mvec(:,irep)] = meanangle(W,MPI2);
            indicator(irep,nrep);
        end
        indicator(0,0)
        
    case 'between2'
        randreset(randset);
        exind   = sum(MPI,2)>0;
        
        for irep=1:nrep
            %             rMPI{irep}  = nan(nrow,ncol);
            CA{irep}        = nan(nrow,nW);
            sortCA{irep}    = nan(nrow,nW);
            Ind{irep}       = nan(nrow,nW);
            temp            = zeros(nrow,ncol);
%             rMPI{irep}  = reshape(MPI,numel(MPI),1);
%             rMPI{irep}  = MPI(randperm(numel(MPI)));
%             rMPI{irep}  = reshape(rMPI{irep},nrow,ncol);
            
            while(any(sum(temp,2)==0))
            exMPI       = MPI(exind,:);
            inMPI       = MPI(~exind,:);
            
            temp(exind,:)   = reshape(exMPI(randperm(numel(exMPI))),size(exMPI,1),size(exMPI,2));
            temp(~exind,:)  = reshape(inMPI(randperm(numel(inMPI))),size(inMPI,1),size(inMPI,2));
%             home 
%             disp(sum(temp,2)')
            end
            
            rMPI{irep}      = temp;
            
            for irow=1:nrow
                %                 rMPI{irep}(irow,:)  = MPI(irow,randperm(ncol));
                for iW=1:nW
                    x   = W{iW}(irow,:);
                    y   = rMPI{irep}(irow,:);
                    CA{irep}(irow,iW)= dot(x,y)/(norm(x)*norm(y));
%                     CA{irep}(irow,iW)= dot(x,y);
                end
                if(abs_flag)
                [sortCA{irep}(irow,:),Ind{irep}(irow,:)]    = sort(abs(CA{irep}(irow,:)),'descend');
                else
                    [sortCA{irep}(irow,:),Ind{irep}(irow,:)]    = sort(CA{irep}(irow,:),'descend');
                end
            end
            
            %     [m(irep),mvec(:,irep)] = meanangle(W,MPI2);
            indicator(irep,nrep);
        end
        indicator(0,0)
        
        
        
end
end

% function [a,avec]   = meanangle(W,MPI)
% nW      = 3;
% nrow    = size(MPI,1);
%
% amtx    = nan(nrow,nW);
%
% for irow=1:nrow
%     for iW=1:nW
%         x   = squeeze(MPI(irow,:));
%         y   = squeeze(W(iW,irow,:));
%
%         amtx(irow,iW)   = abs(dot(x,y)/norm(x)/norm(y));
%     end
% end
% avec    = max(amtx,[],2);
% a       = mean(avec);
%
%
%
% end
