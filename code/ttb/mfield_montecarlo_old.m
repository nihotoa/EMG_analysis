function [rMPI,CA,Ind,sortCA]  =mfield_montecarlo(nrep,method)
if nargin<1
    nrep    = 1000;
    method  = 'within';
elseif nargin<2
    method  = 'within';
   
end
W{1}  = [
    1.12 	0.84 	0.00 	0.51 	0.54 	0.77 	0.60 	0.41 	0.58 	0.26 	0.00 	0.40
    0.99 	0.69 	0.00 	0.25 	0.29 	0.42 	0.32 	0.19 	0.31 	0.10 	0.00 	0.12
    0.65 	0.29 	0.00 	0.49 	0.78 	1.07 	0.66 	0.60 	0.80 	0.32 	0.00 	0.24
    0.02 	0.50 	0.15 	0.67 	0.21 	0.72 	0.50 	0.00 	0.43 	0.25 	0.03 	0.13
    0.90 	0.89 	0.32 	0.14 	0.69 	0.92 	0.99 	0.00 	0.22 	0.14 	0.38 	0.01
    1.04 	0.98 	0.40 	0.26 	0.87 	0.98 	1.09 	0.02 	0.39 	0.18 	0.35 	0.09
    1.01 	0.97 	0.36 	0.25 	0.83 	0.94 	1.01 	0.09 	0.36 	0.20 	0.42 	0.05
    1.01 	0.97 	0.41 	0.27 	0.86 	1.00 	1.10 	0.00 	0.31 	0.17 	0.35 	0.06
    1.01 	0.96 	0.40 	0.26 	0.86 	1.00 	1.08 	0.01 	0.30 	0.12 	0.31 	0.00
    0.58 	0.52 	0.18 	0.00 	0.19 	0.56 	0.85 	0.08 	0.20 	0.03 	0.21 	0.21
    0.79 	0.76 	0.22 	0.07 	0.51 	0.80 	1.03 	0.04 	0.30 	0.07 	0.32 	0.22
    0.85 	0.82 	0.36 	0.21 	0.65 	0.92 	1.17 	0.00 	0.23 	0.20 	0.47 	0.17
    0.70 	0.73 	0.31 	0.15 	0.58 	0.85 	1.09 	0.01 	0.33 	0.12 	0.14 	0.19
    0.78 	0.69 	0.29 	0.14 	0.51 	0.82 	1.12 	0.01 	0.36 	0.18 	0.10 	0.12
    0.82 	0.80 	0.41 	0.21 	0.57 	0.98 	1.20 	0.00 	0.41 	0.22 	0.15 	0.25
    0.78 	0.71 	0.30 	0.18 	0.90 	0.74 	1.06 	0.00 	0.27 	0.10 	0.20 	0.11
    0.79 	0.77 	0.37 	0.23 	0.94 	0.76 	0.66 	0.00 	0.37 	0.10 	0.23 	0.00
    0.84 	0.78 	0.48 	0.34 	0.82 	0.86 	1.16 	0.07 	0.29 	0.13 	0.40 	0.02
    0.77 	0.79 	0.33 	0.35 	0.93 	0.76 	1.15 	0.13 	0.43 	0.08 	0.29 	0.00
    0.80 	0.96 	0.22 	0.26 	0.75 	0.63 	1.22 	0.02 	0.52 	0.13 	0.28 	0.12
    0.80 	0.97 	0.25 	0.29 	0.77 	0.65 	1.21 	0.01 	0.54 	0.16 	0.30 	0.19
    0.90 	0.83 	0.30 	0.25 	0.94 	0.79 	0.86 	0.01 	0.60 	0.13 	0.27 	0.03
    0.99 	0.91 	0.36 	0.29 	0.82 	0.82 	1.18 	0.00 	0.61 	0.17 	0.10 	0.75
    ];

W{2}  = [
    0.03 	0.14 	1.02 	0.12 	0.08 	0.01 	0.07 	0.15 	0.09 	0.06 	0.01 	0.00
    0.05 	0.16 	1.01 	0.09 	0.07 	0.00 	0.05 	0.12 	0.08 	0.06 	0.05 	0.03
    0.12 	0.08 	1.01 	0.07 	0.06 	0.00 	0.09 	0.18 	0.08 	0.07 	0.08 	0.07
    0.14 	0.34 	0.68 	0.00 	0.39 	0.14 	0.22 	0.68 	0.35 	0.31 	0.20 	0.16
    0.05 	0.04 	0.17 	0.21 	0.15 	0.04 	0.01 	1.05 	0.37 	0.10 	0.09 	0.00
    0.03 	0.02 	0.24 	0.23 	0.15 	0.06 	0.02 	1.17 	0.42 	0.16 	0.16 	0.01
    0.02 	0.01 	0.18 	0.17 	0.08 	0.06 	0.05 	0.97 	0.35 	0.12 	0.07 	0.00
    0.03 	0.02 	0.20 	0.20 	0.11 	0.06 	0.03 	1.14 	0.45 	0.05 	0.03 	0.00
    0.03 	0.02 	0.20 	0.20 	0.11 	0.06 	0.04 	1.14 	0.45 	0.04 	0.03 	0.00
    0.01 	0.00 	0.13 	0.09 	0.03 	0.03 	0.05 	0.73 	0.24 	0.10 	0.06 	0.08
    0.06 	0.04 	0.20 	0.13 	0.18 	0.04 	0.00 	1.01 	0.34 	0.12 	0.08 	0.00
    0.10 	0.10 	0.17 	0.25 	0.25 	0.03 	0.00 	0.98 	0.47 	0.07 	0.07 	0.00
    0.23 	0.21 	0.37 	0.41 	0.37 	0.09 	0.00 	1.21 	0.50 	0.37 	0.26 	0.00
    0.21 	0.22 	0.37 	0.46 	0.46 	0.10 	0.00 	1.29 	0.48 	0.34 	0.35 	0.01
    0.17 	0.17 	0.28 	0.35 	0.36 	0.06 	0.00 	1.21 	0.42 	0.35 	0.22 	0.00
    0.09 	0.07 	0.15 	0.19 	0.15 	0.11 	0.00 	1.16 	0.39 	0.15 	0.15 	0.00
    0.05 	0.06 	0.15 	0.26 	0.11 	0.06 	0.00 	1.15 	0.36 	0.23 	0.20 	0.14
    0.03 	0.04 	0.08 	0.14 	0.14 	0.04 	0.00 	0.99 	0.33 	0.08 	0.09 	0.00
    0.03 	0.01 	0.08 	0.13 	0.06 	0.05 	0.00 	0.91 	0.35 	0.08 	0.10 	0.00
    0.06 	0.02 	0.12 	0.12 	0.13 	0.14 	0.00 	1.12 	0.21 	0.14 	0.17 	0.00
    0.06 	0.02 	0.12 	0.12 	0.14 	0.14 	0.00 	1.13 	0.21 	0.15 	0.19 	0.00
    0.03 	0.03 	0.15 	0.17 	0.09 	0.08 	0.00 	1.11 	0.19 	0.17 	0.13 	0.00
    0.07 	0.08 	0.19 	0.21 	0.19 	0.17 	0.00 	1.15 	0.27 	0.18 	0.17 	0.00
    ];

W{3}  = [
    0.00 	0.03 	0.00 	0.36 	0.34 	0.27 	0.29 	0.39 	0.36 	0.42 	1.12 	0.62
    0.00 	0.13 	0.02 	0.68 	0.64 	0.75 	0.63 	0.57 	0.63 	0.65 	1.03 	0.89
    0.23 	0.54 	0.00 	0.39 	0.16 	0.00 	0.25 	0.22 	0.14 	0.55 	1.01 	0.70
    0.82 	0.15 	0.15 	0.35 	0.40 	0.14 	0.28 	0.35 	0.22 	0.46 	0.78 	0.72
    0.06 	0.05 	0.40 	0.41 	0.14 	0.09 	0.13 	0.04 	0.42 	0.51 	0.37 	1.23
    0.00 	0.00 	0.08 	0.09 	0.02 	0.03 	0.02 	0.00 	0.13 	0.50 	0.38 	1.07
    0.00 	0.00 	0.30 	0.29 	0.11 	0.04 	0.07 	0.04 	0.30 	0.45 	0.39 	1.17
    0.00 	0.01 	0.12 	0.13 	0.02 	0.00 	0.03 	0.00 	0.21 	0.65 	0.55 	1.13
    0.00 	0.02 	0.12 	0.14 	0.02 	0.00 	0.04 	0.00 	0.22 	0.70 	0.59 	1.19
    0.45 	0.61 	0.55 	0.72 	1.03 	0.45 	0.00 	0.26 	0.58 	0.71 	0.65 	0.69
    0.11 	0.21 	0.51 	0.67 	0.29 	0.18 	0.00 	0.00 	0.35 	0.71 	0.55 	1.01
    0.00 	0.01 	0.36 	0.41 	0.02 	0.08 	0.01 	0.08 	0.36 	0.59 	0.42 	0.99
    0.02 	0.01 	0.18 	0.24 	0.00 	0.08 	0.17 	0.00 	0.17 	0.42 	0.28 	0.99
    0.00 	0.07 	0.18 	0.19 	0.00 	0.11 	0.12 	0.00 	0.13 	0.27 	0.22 	1.03
    0.00 	0.00 	0.12 	0.17 	0.00 	0.01 	0.07 	0.05 	0.16 	0.29 	0.16 	0.92
    0.03 	0.15 	0.29 	0.28 	0.00 	0.07 	0.31 	0.00 	0.32 	0.52 	0.52 	1.15
    0.12 	0.16 	0.28 	0.20 	0.00 	0.24 	0.67 	0.02 	0.25 	0.46 	0.38 	0.95
    0.09 	0.16 	0.32 	0.37 	0.00 	0.13 	0.07 	0.02 	0.32 	0.62 	0.41 	1.19
    0.13 	0.16 	0.49 	0.41 	0.00 	0.15 	0.08 	0.00 	0.28 	0.67 	0.47 	1.23
    0.09 	0.06 	0.39 	0.37 	0.10 	0.21 	0.00 	0.00 	0.20 	0.48 	0.41 	1.20
    0.09 	0.05 	0.35 	0.34 	0.07 	0.19 	0.00 	0.00 	0.17 	0.44 	0.38 	1.13
    0.06 	0.13 	0.29 	0.29 	0.00 	0.17 	0.35 	0.01 	0.21 	0.43 	0.46 	1.19
    0.00 	0.00 	0.09 	0.09 	0.00 	0.00 	0.01 	0.03 	0.01 	0.49 	0.82 	0.46
    ];

MPI = [
    0.0 	0.0 	0.0 	2.5 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	3.8 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	7.3 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	13.1 	0.0 	7.7 	6.9 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	20.0
    0.0 	10.6 	8.4 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	18.2 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0
    10.2 	7.9 	3.6 	4.3 	4.4 	2.6 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0
    13.8 	12.7 	6.9 	6.0 	5.6 	2.7 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	9.5 	0.0 	0.0 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	4.1 	0.0 	0.0
    0.0 	1.4 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	-7.0
    0.0 	0.0 	0.0 	0.0 	0.0 	-3.5 	0.0 	0.0 	-2.6 	0.0 	0.0 	0.0
    7.7 	8.1 	9.7 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	6.7 	0.0 	6.0 	4.5 	0.0
    0.0 	14.0 	0.0 	5.4 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	-3.7 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	4.5 	0.0 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	-3.3 	0.0 	-3.2 	0.0 	-1.7 	0.0 	0.0 	-2.9
    0.0 	0.0 	0.0 	0.0 	0.0 	2.6 	0.0 	0.0 	2.3 	0.0 	0.0 	0.0
    0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	0.0 	-7.7
    0.0 	0.0 	4.8 	0.0 	0.0 	20.3 	15.8 	0.0 	0.0 	0.0 	0.0 	0.0
    ];
randreset(0);
% randreset(2);
% randreset(3);

[nrow,ncol] = size(MPI);
% [a,avec]    = meanangle(W,MPI);

nW          = length(W);

m       = nan(1,nrep);
mvec    = nan(nrow,nrep);

rMPI    = cell(nrep,1);
CA       = cell(nrep,1);
Ind     = cell(nrep,1);
sCA      = cell(nrep,1);


switch method
    case 'within'
        randreset(3);
        for irep=1:nrep
            rMPI{irep}  = nan(nrow,ncol);
            CA{irep}     = nan(nrow,nW);
            sortCA{irep}    = nan(nrow,nW);
            Ind{irep}   = nan(nrow,nW);
            for irow=1:nrow
                rMPI{irep}(irow,:)  = MPI(irow,randperm(ncol));
                for iW=1:nW
                    x   = W{iW}(irow,:);
                    y   = rMPI{irep}(irow,:);
                    CA{irep}(irow,iW)= dot(x,y)/norm(x)/norm(y);
                end
                [sortCA{irep}(irow,:),Ind{irep}(irow,:)]    = sort(abs(CA{irep}(irow,:)),'descend');
            end
            
            %     [m(irep),mvec(:,irep)] = meanangle(W,MPI2);
            indicator(irep,nrep);
        end
        indicator(0,0)
    case 'between'
        randreset(0);
        for irep=1:nrep
            %             rMPI{irep}  = nan(nrow,ncol);
            CA{irep}     = nan(nrow,nW);
            sortCA{irep}    = nan(nrow,nW);
            Ind{irep}   = nan(nrow,nW);
            
            rMPI{irep}  = reshape(MPI,numel(MPI),1);
            rMPI{irep}  = MPI(randperm(numel(MPI)));
            rMPI{irep}  = reshape(rMPI{irep},nrow,ncol);
            
            for irow=1:nrow
                %                 rMPI{irep}(irow,:)  = MPI(irow,randperm(ncol));
                for iW=1:nW
                    x   = W{iW}(irow,:);
                    y   = rMPI{irep}(irow,:);
                    CA{irep}(irow,iW)= dot(x,y)/norm(x)/norm(y);
                end
                [sortCA{irep}(irow,:),Ind{irep}(irow,:)]    = sort(abs(CA{irep}(irow,:)),'descend');
            end
            
            %     [m(irep),mvec(:,irep)] = meanangle(W,MPI2);
            indicator(irep,nrep);
        end
        indicator(0,0)
end
end

% function [a,avec]   = meanangle(W,MPI)
% nW      = 3;
% nrow    = size(MPI,1);
%
% amtx    = nan(nrow,nW);
%
% for irow=1:nrow
%     for iW=1:nW
%         x   = squeeze(MPI(irow,:));
%         y   = squeeze(W(iW,irow,:));
%
%         amtx(irow,iW)   = abs(dot(x,y)/norm(x)/norm(y));
%     end
% end
% avec    = max(amtx,[],2);
% a       = mean(avec);
%
%
%
% end
