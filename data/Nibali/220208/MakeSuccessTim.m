%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%CTTL_003からの信号が安定していなかったので、うまくいったシグナルだけを抜き出すためのプログラム
%うまくいっていない信号は,UPとDOWNのサンプル数の差が1しかなかった(サンプリングレート44HZなのに)ので,UPとDOWNのサンプル数の差が100以上のものをうまくいったシグナルにした
%このデータに関しては立ち上がりと立ち下がりのどちらか一方のみでいいので、立ち上がりのデータのみをsuccess_signalとした
%改善点
%functionにして、他のプログラムから呼び出せるようにする
%ディレクトリの移動
%確認のために即興で作ったプログラムなので、改善点はたくさんあるはず(関数名も変えた方がいい)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function [success_signal]= MakeSuccessTim(a)
    count = 1;
    for ii = 1:length(a)
        if a(2,ii) - a(1,ii) > 100
            success_signal_sel(:,count) = a(:,ii);
            count = count + 1;
        end
    end
    success_signal = success_signal_sel(1,:);
end
