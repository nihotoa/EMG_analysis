function tcorr% Check ParametersAnalysisObjects = gsma;nAnalyses = length(AnalysisObjects);if nAnalyses < 1   disp('PeakAreas: No selected analysis -- nothing to do')   return;end% fprintf(fid,'FileName\tSpike\tTrigger\tComponents\tnTrials\tBaseStart(ms)\tBaseEnd(ms)\tBaseMean(Hz)\tBaseSTD(Hz)\tStart(ms)\tStartValue(Hz)\tEnd(ms)\tEndValue(Hz)\tPeakTime(ms)\tPeak(Hz)\tMean(Hz)\tp\t(<0.05)\n');for ana = 1:nAnalyses   analysisName = get(AnalysisObjects(ana), 'Name');   FullName = get(AnalysisObjects(ana), 'FullName');   AnalysesComponents = analyses(AnalysisObjects(ana), 'componentobjs');   nAnalysesComponents = length(AnalysesComponents);   if nAnalysesComponents == 0      disp(['PeakAreas: No components to do: ' analysisName]);      break;   end   maxTrials = 0;   for i = 1:nAnalysesComponents      analysisType = get(AnalysesComponents(i), 'SubClass');%       spikeName = get(AnalysesComponents(i), 'Target');      TimeUnits = get(AnalysesComponents(i), 'TimeUnits');%       YDataUnits = get(AnalysesComponents(i), 'YUnits');      ConversionFactor = units('conversionfactor', 'time', TimeUnits, 'milliseconds');           WindowStart = get(AnalysesComponents(i), 'WindowStart') * ConversionFactor;      WindowStop = get(AnalysesComponents(i), 'WindowStop') * ConversionFactor;                   trialData = get(AnalysesComponents(i), 'TrialData');      trialTimes = get(AnalysesComponents(i), 'TrialTriggerTime');%       TrialsToUse   = get(AnalysesComponents(i), 'TrialsToUse');%       nTotalTrials = get(AnalysesComponents(i), 'TrialCount');      nTrials = size(trialData, 1);      name = get(AnalysesComponents(i), 'Name'); %       disp(name)            switch analysisType          case 'perievent histogram'              Datalabel{1}  = 'Unit(Hz)';              for ii=1:nTrials                  Data(ii,1)  = (length(trialData{ii})/(WindowStop-WindowStart)*ConversionFactor); % Hz              end              spikeName = get(AnalysesComponents(i), 'Target');          case 'triggered average'              Datalabel{i+1}    = name;              Data(:,i+1)    = mean(trialData,2);      end                  end  %for i = 1:nAnalysesComponents   end     %for ana = 1:nAnalyses% % load TrialsToUseSet.mat% eval(['TrialsToUse   = TrialsToUseSet.',analysisName,'.',spikeName,';']);load Aobasss  = eval(['Aoba.',analysisName]);eval(['TrialsToUse   = [',sss,'];'])Data  = Data(TrialsToUse,:);filename    =sprintf('c:\\data\\corr%s-%s.xls',analysisName,spikeName);disp(filename)for ii=2:length(Datalabel)    disp(Datalabel{ii})    [r,p]   =corr(Data(:,1),Data(:,ii));    disp([' r   =',num2str(r)])    disp([' r^2 =',num2str(r^2)])    disp([' p   =',num2str(p)])    if p<0.05        disp('*')    elseif p<0.1        disp('+')    endendfid = fopen(filename,'a');fprintf(fid,'no');for ii=1:length(Datalabel)    fprintf(fid,'\t%s',Datalabel{ii});endfprintf(fid,'\n');for jj=1:size(Data,1)    fprintf(fid,'%d',jj);    for ii=1:size(Data,2);        fprintf(fid,'\t%f',Data(jj,ii));    end    fprintf(fid,'\n');endfclose(fid);