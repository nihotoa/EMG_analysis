% function tfindpeaks% Check ParametersBaseAna     = 1;BaseRange   = [-49, -10]; %(ms)LValue      = 3;        % # times of Basestdnn          = 2;kk          = 1;filename    = 'c:\data\koumeStats.xls'fid         = fopen(filename,'a')% disp(fid)AnalysisObjects = gsma;nAnalyses = length(AnalysisObjects);if nAnalyses < 1    disp('PeakAreas: No selected analysis -- nothing to do')    return;end% fprintf(fid,'FileName\tSpike\tTrigger\tComponents\tnTrials\tBaseStart(ms)\tBaseEnd(ms)\tBaseMean(Hz)\tBaseSTD(Hz)\tStart(ms)\tStartValue(Hz)\tEnd(ms)\tEndValue(Hz)\tPeakTime(ms)\tPeak(Hz)\tMean(Hz)\tp\t(<0.05)\n');for ana = 1:nAnalyses    analysisName = get(AnalysisObjects(ana), 'Name');    FullName = get(AnalysisObjects(ana), 'FullName');    AnalysesComponents = analyses(AnalysisObjects(ana), 'componentobjs');    nAnalysesComponents = length(AnalysesComponents);    if nAnalysesComponents == 0        disp(['PeakAreas: No components to do: ' analysisName]);        break;    end    figure('Name',FullName,...        'NumberTitle','off',...        'PaperOrientation','portrait',...        'PaperPosition',[-2 4.91751 26.4382 19.8287],...%[-2.72314 4.91751 26.4382 19.8287]        'PaperPositionMode','manual',...        'PaperType','A4',...        'Pointer','fullcrosshair',...        'Position',[100    40   1000   750]);    uicontrol('BackgroundColor',get(gcf,'Color'),...        'Style','text',...        'HorizontalAlignment','center',...        'Position',[80 720 400 20],...        'String',FullName);    htext    = uicontrol('BackgroundColor',[1,1,1],...        'Style','text',...        'HorizontalAlignment','left',...        'Position',[500 100 400 600],...        'String',FullName);    message=[];    disp('----------------------');    disp(FullName)    fprintf(fid,'----------------------\n%s\n',FullName);    %Calculate base statics    trialData = get(AnalysesComponents(BaseAna), 'TrialData');    spikeName = get(AnalysesComponents(BaseAna), 'Target');    TrialsToUse   = get(AnalysesComponents(BaseAna), 'TrialsToUse');    nTotalTrials = get(AnalysesComponents(BaseAna), 'TrialCount');    TimeUnits = get(AnalysesComponents(BaseAna), 'TimeUnits');    ConversionFactor = units('conversionfactor', 'time', TimeUnits, 'milliseconds');    xData = get(AnalysesComponents(BaseAna), 'XData') * ConversionFactor;    binWidth = xData(2) - xData(1);    yData = get(AnalysesComponents(BaseAna), 'YData') / binWidth * ConversionFactor / nTotalTrials;%     yData = get(AnalysesComponents(BaseAna), 'YData');    if isempty(TrialsToUse)        TrialsToUse  = [1:nTotalTrials];    end    BaseSE(1) = fix((BaseRange(1) - xData(1)) / binWidth) + 1;    BaseSE(2) = BaseSE(1) + ceil((BaseRange(2) - BaseRange(1)) / binWidth) - 1;    BaseData = yData(BaseSE(1):BaseSE(2));    Basemean = mean(BaseData);    Basestd  = std(BaseData);    Limit  = [Basemean-LValue*Basestd , Basemean+LValue*Basestd];    s = sprintf('\t----\tStart\tEnd\tmean\tSTD\tnTrials');    fprintf(fid,'%s\n',s);    disp(s)    message{length(message)+1}=['nTrials=  ',num2str(nTotalTrials)];    message{length(message)+1}=s;set(htext,'String',message);    s = sprintf('\tBase\t%0.0f\t%0.0f\t%0.1f\t%0.1f\t%d',xData(BaseSE(1))-binWidth/2,xData(BaseSE(2))+binWidth/2,Basemean,Basestd,nTotalTrials);    fprintf(fid,'%s\n',s);    disp(s)    message{length(message)+1}=s;set(htext,'String',message);    BaseTrials=[];    for ii=1:nTotalTrials        BaseTrials(ii)   =sum(double(trialData{TrialsToUse(ii)}* ConversionFactor)>=BaseRange(1)&double(trialData{TrialsToUse(ii)}* ConversionFactor)<BaseRange(2))/((BaseRange(2)-BaseRange(1))/ConversionFactor);    end    s = sprintf('\t----\tStart(ms)\tEnd(ms)\tMean(Hz)\tPeakTime(ms)\tPeak(Hz)\tp\t(<0.05)');    fprintf(fid,'%s\n',s);    disp(s)    message{length(message)+1}=s;set(htext,'String',message);    % Caculate statistics    maxTrials = 0;    for i = 1:nAnalysesComponents        analysisType = get(AnalysesComponents(i), 'SubClass');        spikeName = get(AnalysesComponents(i), 'Target');        TimeUnits = get(AnalysesComponents(i), 'TimeUnits');        %       YDataUnits = get(AnalysesComponents(i), 'YUnits');        ConversionFactor = units('conversionfactor', 'time', TimeUnits, 'milliseconds');        WindowStart = get(AnalysesComponents(i), 'WindowStart') * ConversionFactor;        WindowStop = get(AnalysesComponents(i), 'WindowStop') * ConversionFactor;        trialData = get(AnalysesComponents(i), 'TrialData');        trialTimes = get(AnalysesComponents(i), 'TrialTriggerTime');        TrialsToUse   = get(AnalysesComponents(i), 'TrialsToUse');        nTotalTrials = get(AnalysesComponents(i), 'TrialCount');        nTrials = size(trialData, 1);        name = get(AnalysesComponents(i), 'Name');        disp(name)        %       fprintf(fid,'%s\n',name);        if (nTrials < 4)            disp(['Warning: Too few stored trials in ' analysisName ' : ' name]);            %            break;        end        if (nTrials < nTotalTrials)            disp(['Warning: There are fewer stored trials than averaged trials in ' analysysName ' : ' name]);        end        xData = get(AnalysesComponents(i), 'XData') * ConversionFactor;        binWidth = xData(2) - xData(1);        yData = get(AnalysesComponents(i), 'YData') / binWidth * ConversionFactor / nTotalTrials;        nPoints = length(yData);        if isempty(TrialsToUse)            TrialsToUse  = [1:nTotalTrials];        end        PRange    = logical(zeros(1,nPoints));        TRange    = logical(zeros(1,nPoints));        Bigger    = yData>Limit(2);        Smaller   = yData<Limit(1);        ConvBigger    = conv(Bigger,ones(1,nn));        ConvSmaller   = conv(Smaller,ones(1,nn));        for ii=1:nn            PRange    = (PRange | (ConvBigger(1+(ii-1):nPoints+(ii-1))>=kk));            TRange    = (TRange | (ConvSmaller(1+(ii-1):nPoints+(ii-1))>=kk));        end        PRange    = PRange & Bigger;        TRange    = TRange & Smaller;        addTRange = [];        addPRange = [];        left=[];right=[];        for ii=1+(nn-2):nPoints-(nn-2)            if(~TRange(ii))                for jj=1:nn-2                    left  = sum(TRange(ii-jj:ii-1));                    right = sum(TRange(ii+1:ii+(nn-1-jj)));                    if(left~=0&right~=0&(left+right)>=kk)                        addTRange = [addTRange,ii];                    end                end            end        end        left=[];right=[];        for ii=1+(nn-2):nPoints-(nn-2)            if(~PRange(ii))                for jj=1:nn-2                    left  = sum(PRange(ii-jj:ii-1));                    right = sum(PRange(ii+1:ii+(nn-1-jj)));                    if(left~=0&right~=0&(left+right)>=kk)                        addPRange = [addPRange,ii];                    end                end            end        end        %        %        %       plot(xData(takei(5:124)>=3&TRange),yData((takei(5:124)>=3&TRange)),'r*')        % >> plot(xData(takei(1:120)>=3&TRange),yData((takei(1:120)>=3&TRange)),'r*')        % >> plot(xData(takei(3:122)>=3&~TRange),yData((takei(3:122)>=3&~TRange)),'r*')        %        PRange(addPRange)    = 1;        TRange(addTRange)    = 1;        PeakSE    =[];        TroughSE  =[];        Peak  = [];        Trough    = [];        %       findpeaks        if(sum(PRange)~=0)            [y,PeakSE(:,1)]  = find(([PRange,0]-[0,PRange])==1);            [y,PeakSE(:,2)]  = find(([PRange,0]-[0,PRange])==-1);            PeakSE(:,2) = PeakSE(:,2)-1;            for ii=1:size(PeakSE,1)                Peak{ii}  =[PeakSE(ii,1):PeakSE(ii,2)];                [yy,ind]=max(yData(Peak{ii}));                tPeak(ii).max = yy;                tPeak(ii).maxTimeBin = Peak{ii}(ind);                tPeak(ii).maxTime = xData(tPeak(ii).maxTimeBin);                %               s = sprintf('\tPeak  %d=>\tStart:%0.0f\tStop:%0.0f\tmean:%0.5f',ii,xData(PeakSE(ii,1))-binWidth/2,xData(PeakSE(ii,2))+binWidth/2,mean(yData(Peak{ii})));                %               disp(s)            end        end        if(sum(TRange)~=0)            [y,TroughSE(:,1)]  = find(([TRange,0]-[0,TRange])==1);            [y,TroughSE(:,2)]  = find(([TRange,0]-[0,TRange])==-1);            TroughSE(:,2) = TroughSE(:,2)-1;            for ii=1:size(TroughSE,1)                Trough{ii}  =[TroughSE(ii,1):TroughSE(ii,2)];                [yy,ind]=min(yData(Trough{ii}));                tTrough(ii).min = yy;                tTrough(ii).minTimeBin = Trough{ii}(ind);                tTrough(ii).minTime = xData(tTrough(ii).minTimeBin);                %               s = sprintf('\tTrough%d=>\tStart:%0.0f\tStop:%0.0f\tmean:%0.5f',ii,xData(TroughSE(ii,1))-binWidth/2,xData(TroughSE(ii,2))+binWidth/2,mean(yData(Trough{ii})));                %               disp(s)            end        end        %       find nearest Peak or Trough to trigger        allPT = [];        allPT = [xData(PRange),xData(TRange)];        nearestPeak   = [];        nearestTrough = [];        if(sum(allPT>0)~=0)            nearestIndex = find(xData==min(allPT(allPT>0)));            if(sum(PRange)~=0)                for ii=1:length(Peak)                    if(ismember(nearestIndex,Peak{ii}))                        nearestPeak   = Peak{ii};                    end                end            end            if(sum(TRange)~=0)                for ii=1:length(Trough)                    if(ismember(nearestIndex,Trough{ii}))                        nearestTrough   = Trough{ii};                    end                end            end        end        PeakTrials=[];        Peakp=[];        Peakh=[];        if(~isempty(PeakSE))            for jj=1:size(PeakSE,1)                for ii=1:nTotalTrials                    PeakTrials(jj,ii)   =sum((trialData{TrialsToUse(ii)}* ConversionFactor)>=(xData(PeakSE(jj,1))-binWidth/2)&(trialData{TrialsToUse(ii)}* ConversionFactor)<(xData(PeakSE(jj,2))+binWidth/2))/(binWidth*(PeakSE(jj,2)-PeakSE(jj,1)+1))*ConversionFactor;                end                [Peakp(jj),Peakh(jj)]=signrank(BaseTrials,PeakTrials(jj,:));                s = sprintf('\tPeak%d\t%0.0f\t%0.0f\t%0.2f\t%0.0f\t%0.2f\t%0.3f\t%c',jj,xData(PeakSE(jj,1))-binWidth/2,xData(PeakSE(jj,2))+binWidth/2,mean(yData(Peak{jj})),tPeak(jj).maxTime,tPeak(jj).max,Peakp(jj),('*'*Peakh(jj)));                fprintf(fid,'%s\n',s);                %            fprintf(fid,'FileName\tTrigger\tComponents\tnTrials\tBaseStart(ms)\tBaseEnd(ms)\tBaseMean(Hz)\tBaseSTD(Hz)\tStart(ms)\tStartValue(Hz)\tEnd(ms)\tEndValue(Hz)\tMean(Hz)\tPeakTime(ms)\tPeak(Hz)\tp\t(<0.05)');                %            fprintf(fid,'%s\t%s\t%s\tPeak%d\t%d\t%0.0f\t%0.0f\t%0.2f\t%0.2f\t%0.0f\t%0.2f\t%0.0f\t%0.2f\t%0.0f\t%0.2f\t%0.2f\t%0.3f\t%c\n',analysisName,spikeName,name,jj,nTotalTrials,xData(BaseSE(1))-binWidth/2,xData(BaseSE(2))+binWidth/2,Basemean,Basestd,xData(PeakSE(jj,1))-binWidth/2,yData(PeakSE(jj,1)),xData(PeakSE(jj,2))+binWidth/2,yData(PeakSE(jj,1)),tPeak(jj).maxTime,tPeak(jj).max,mean(yData(Peak{jj})),Peakp(jj),('*'*Peakh(jj)));                disp(s)                message{length(message)+1}=s;set(htext,'String',message);            end        end        TroughTrials=[];        Troughp=[];        Troughh=[];        if(~isempty(TroughSE))            for jj=1:size(TroughSE,1)                for ii=1:nTotalTrials                    TroughTrials(jj,ii)   =sum((trialData{TrialsToUse(ii)}* ConversionFactor)>=(xData(TroughSE(jj,1))-binWidth/2)&(trialData{TrialsToUse(ii)}* ConversionFactor)<(xData(TroughSE(jj,2))+binWidth/2))/(binWidth*(TroughSE(jj,2)-TroughSE(jj,1)+1))*ConversionFactor;                end                [Troughp(jj),Troughh(jj)]=signrank(BaseTrials,TroughTrials(jj,:));                s = sprintf('\tTrough%d\t%0.0f\t%0.0f\t%0.2f\t%0.0f\t%0.2f\t%0.3f\t%c',jj,xData(TroughSE(jj,1))-binWidth/2,xData(TroughSE(jj,2))+binWidth/2,mean(yData(Trough{jj})),tTrough(jj).minTime,tTrough(jj).min,Troughp(jj),('*'*Troughh(jj)));                %            fprintf(fid,'%s\t%s\t%s\tTrough%d\t%d\t%0.0f\t%0.0f\t%0.2f\t%0.2f\t%0.0f\t%0.2f\t%0.0f\t%0.2f\t%0.0f\t%0.2f\t%0.2f\t%0.3f\t%c\n',analysisName,spikeName,name,jj,nTotalTrials,xData(BaseSE(1))-binWidth/2,xData(BaseSE(2))+binWidth/2,Basemean,Basestd,xData(TroughSE(jj,1))-binWidth/2,yData(TroughSE(jj,1)),xData(TroughSE(jj,2))+binWidth/2,yData(TroughSE(jj,1)),tTrough(jj).minTime,tTrough(jj).min,mean(yData(Trough{jj})),Troughp(jj),('*'*Troughh(jj)));                fprintf(fid,'%s\n',s);                disp(s)                message{length(message)+1}=s;set(htext,'String',message);            end        end        %       anaTrials(i) = nTrials;        %       if nTrials > maxTrials        %           maxTrials = nTrials;        %       end        %        %       for j = 1:1%nTrials        %         trial = double(trialData{j, :});        %       end        subplot(nAnalysesComponents,2,i*2-1); hold on; title(name);        bar(xData,yData,1,'w');        if(~isempty(PeakSE))            for ii=1:size(PeakSE,1)                switch Peakh(ii)                    case 1                        bar(xData(Peak{ii}),yData(Peak{ii}),'b')                        plot(tPeak(ii).maxTime,tPeak(ii).max,'r*')                    case 0                        bar(xData(Peak{ii}),yData(Peak{ii}),'y')                end            end        end        if(~isempty(TroughSE))            for ii=1:size(TroughSE,1)                switch Troughh(ii)                    case 1                        bar(xData(Trough{ii}),yData(Trough{ii}),'g')                        plot(tTrough(ii).minTime,tTrough(ii).min,'r*')                    case 0                        bar(xData(Trough{ii}),yData(Trough{ii}),'y')                end            end        end        %       if(sum(PRange)~=0)        %           bar(xData(PRange),yData(PRange),1,'y');        %       end        %       if(sum(TRange)~=0)        %           bar(xData(TRange),yData(TRange),1,'y');        %       end        %       if(sum(~PRange&~TRange)~=0)        %           bar(xData(~PRange&~TRange),yData(~PRange&~TRange),1,'w');        %       end        %       if(~isempty(nearestPeak))        %           bar(xData(nearestPeak),yData(nearestPeak),1,'b');        %       end        %       if(~isempty(nearestTrough))        %           bar(xData(nearestTrough),yData(nearestTrough),1,'g');        %       end        if(i==BaseAna)            bar(xData((xData>=BaseRange(1))&(xData<BaseRange(2))),yData((xData>=BaseRange(1))&(xData<BaseRange(2))),1,'r')            %>>         adding  regression line            tempYLim  =get(gca,'YLim');            coef  =polyfit(xData([BaseSE(1):BaseSE(2)]),BaseData,1);            yreg  =polyval(coef,xData);            deltareg  =std(BaseData-yreg([BaseSE(1):BaseSE(2)]));            plot(xData,yreg,'c-',xData,yreg-LValue*deltareg,'c--',xData,yreg+LValue*deltareg,'c--');            set(gca,'YLim',tempYLim);            %<<        end        plot(xData,Basemean*ones(size(xData)),'r-',xData,Limit(1)*ones(size(xData)),'r:',xData,Limit(2)*ones(size(xData)),'r:')        set(gca,'XGrid','on',...            'XMinorGrid','off',...            'XMinorTick','on',...            'XTick',[xData(1)-binWidth/2:500:xData(length(xData))+binWidth/2],...            'XTickLabel',{(xData(1)-binWidth/2)/1000:0.5:(xData(length(xData))+binWidth/2)/1000},...            'XTickLabelMode','manual',...            'XTickMode','manual');    end  %for i = 1:nAnalysesComponents    haxes    = findobj(gcf,'Type','axes');    if(length(haxes)>1)        YLims    = get(haxes,'YLim');        set(haxes,'YLim',[min([YLims{:}]),max([YLims{:}])])    end    %    disp(['Basemean: ',num2str(Basemean)]);    %    disp(['Basestd:  ',num2str(Basestd)]);    %     print(gcf)    %     close(gcf)end     %for ana = 1:nAnalysesfclose(fid);